{"version":3,"file":"static/js/721.76f1dd1d.chunk.js","mappings":"4PAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAG/CC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAU,EAIpDC,GAAwBC,EAAAA,EAAAA,IACnC,CAACP,EANyB,SAAAC,GAAK,OAAIA,EAAMO,OAAOA,MAAO,IAOvD,SAACN,EAAUM,GACT,OAAON,EAASM,QAAO,SAAAC,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASJ,EAAOG,cAAc,GAE7D,I,mBCbWE,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iEAMhBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mJ,SCHhBG,EAAe,WAC1B,IAAMC,GAAkBC,EAAAA,EAAAA,IAAYf,GAC9BgB,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACX,EAAI,CAAAY,SACFL,EAAgBM,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIlB,EAAIiB,EAAJjB,KAAMmB,EAAMF,EAANE,OAAM,OACtCC,EAAAA,EAAAA,MAACb,EAAI,CAAAQ,SAAA,EACHK,EAAAA,EAAAA,MAAA,QAAAL,SAAA,CAAOf,EAAK,QACZc,EAAAA,EAAAA,KAAA,QAAAC,SAAOI,KAEPL,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAASC,QAAS,kBAAMV,GAASW,EAAAA,EAAAA,IAAcL,GAAI,EAACH,SAAC,aAJzDG,EAOJ,KAIf,ECrBaM,EAAQpB,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8KASpBmB,EAAQrB,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2B,UCPpBoB,EAAS,WACpB,IAAMd,GAAWC,EAAAA,EAAAA,MAEjB,OACEO,EAAAA,EAAAA,MAACI,EAAK,CAAAT,SAAA,EACJD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,2BACHD,EAAAA,EAAAA,KAACW,EAAK,CACJJ,KAAK,OACLrB,KAAK,SACL2B,SAAU,SAAAC,GAAC,OAAIhB,GAASiB,EAAAA,EAAAA,GAAaD,EAAEE,OAAOC,OAAO,MAI7D,E,oBCdaC,GAAa5B,EAAAA,EAAAA,IAAO6B,EAAAA,GAAP7B,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2NAYzBkB,EAAQpB,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uFAOpB4B,GAAc9B,EAAAA,EAAAA,IAAO+B,EAAAA,GAAP/B,CAAagC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,2BAI3B+B,EAASjC,EAAAA,GAAAA,OAAakC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,+IAQtBiC,GAAWnC,EAAAA,EAAAA,IAAOoC,EAAAA,GAAPpC,CAAoBqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,6C,mBCnBtCoC,EAAgBC,EAAAA,KAAaC,MAAM,CACvC5C,KAAM2C,EAAAA,KACHE,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZ5B,OAAQwB,EAAAA,KAAaI,SAAS,cAGnBC,EAAc,WACzB,IAAMxD,GAAWmB,EAAAA,EAAAA,IAAYrB,GACvBsB,GAAWC,EAAAA,EAAAA,MAQXoC,EAAa,SAAAlD,IANI,SAAAA,GACrB,OAAOP,EAAS0D,MACd,SAAAC,GAAO,OAAIA,EAAQnD,KAAKC,gBAAkBF,EAAQC,KAAKC,aAAa,GAExE,CAGMmD,CAAerD,GAGjBa,GAASyC,EAAAA,EAAAA,IAAWtD,IAFpBuD,IAAAA,OAAAA,QAAwB,GAADC,OAAIxD,EAAQC,KAAI,wBAI3C,EAEA,OACEc,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CACLC,cAAe,CACbzD,KAAM,GACNmB,OAAQ,IAEVuC,iBAAkBhB,EAClBiB,SAAU,SAACC,EAAQC,GACjBZ,EAAWW,GACXC,EAAQC,WACV,EAAE/C,UAEFK,EAAAA,EAAAA,MAACY,EAAU,CAAAjB,SAAA,EACTK,EAAAA,EAAAA,MAACI,EAAK,CAAAT,SAAA,CAAC,QAELD,EAAAA,EAAAA,KAACoB,EAAW,CAAClC,KAAK,OAAOqB,KAAK,UAC9BP,EAAAA,EAAAA,KAACyB,EAAQ,CAACvC,KAAK,OAAO+D,UAAU,YAElC3C,EAAAA,EAAAA,MAACI,EAAK,CAAAT,SAAA,CAAC,UAELD,EAAAA,EAAAA,KAACoB,EAAW,CAAClC,KAAK,SAASqB,KAAK,YAChCP,EAAAA,EAAAA,KAACyB,EAAQ,CAACvC,KAAK,SAAS+D,UAAU,YAGpCjD,EAAAA,EAAAA,KAACuB,EAAM,CAAChB,KAAK,SAAQN,SAAC,eAI9B,EC5De,SAASiD,IACtB,IAAMpD,GAAWC,EAAAA,EAAAA,MACXlB,GAAYgB,EAAAA,EAAAA,IAAYjB,GAM9B,OAJAuE,EAAAA,EAAAA,YAAU,WACRrD,GAASsD,EAAAA,EAAAA,MACX,GAAG,CAACtD,KAGFQ,EAAAA,EAAAA,MAAA+C,EAAAA,SAAA,CAAApD,SAAA,EACED,EAAAA,EAAAA,KAACsD,EAAAA,EAAM,CAAArD,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,qBAGTD,EAAAA,EAAAA,KAACkC,EAAW,KAEZlC,EAAAA,EAAAA,KAAA,OAAAC,SAAMpB,GAAa,4BACnBmB,EAAAA,EAAAA,KAACY,EAAM,KACPZ,EAAAA,EAAAA,KAACL,EAAY,MAGnB,C","sources":["store/contacts/selectors.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 10px;\n  width: 400px;\n  font-size: 20px;\n`;\n\nexport const Item = styled.li`\n  width: 380px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'store/contacts/operations';\nimport { selectVisibleContacts } from '../../store/contacts/selectors';\nimport { List, Item } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <span>{name}:</span>\n          <span>{number}</span>\n\n          <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: inline-block;\n  width: 350px;\n  padding: 12px 20px;\n  margin: 8px 0;\n  border: 1px solid #ccc;\n  background-color: #f1f1f1;\n  border-radius: 4px;\n`;\nexport const Input = styled.input`\n  padding: 5px;\n`;\n","import { Input, Label } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'store/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      <p>Find contacts by name</p>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  margin-left: auto;\n  margin-right: auto;\n  display: inline-block;\n  width: 350px;\n  padding: 12px 20px;\n  margin: 8px 0;\n  border: 1px solid #ccc;\n  background-color: #f1f1f1;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  padding: 10px;\n  gap: 10px;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 5px;\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  display: block;\n  font-size: 18px;\n  height: 50px;\n  background-color: #ee82ee;\n  border: 1px solid white;\n`;\nexport const ErrorMsg = styled(ErrorMessage)`\n  font-size: 14px;\n  color: red;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledField,\n  Label,\n  StyledForm,\n  Button,\n  ErrorMsg,\n} from './ContactForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'store/contacts/operations';\nimport { selectContacts } from 'store/contacts/selectors';\nimport Notiflix from 'notiflix';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(60, 'Too Long!')\n    .required('Required'),\n  number: Yup.number().required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const checkedContact = contact => {\n    return contacts.some(\n      element => element.name.toLowerCase() === contact.name.toLowerCase()\n    );\n  };\n\n  const newContact = contact => {\n    if (checkedContact(contact)) {\n      Notiflix.Notify.failure(`${contact.name} already in contacts`);\n    } else {\n      dispatch(addContact(contact));\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n        newContact(values);\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <Label>\n          Name\n          <StyledField name=\"name\" type=\"text\" />\n          <ErrorMsg name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Number\n          <StyledField name=\"number\" type=\"number\" />\n          <ErrorMsg name=\"number\" component=\"div\" />\n        </Label>\n\n        <Button type=\"submit\">Submit</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'store/contacts/operations';\nimport { selectIsLoading } from 'store/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n\n      <ContactForm />\n\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","ContactsList","visibleContacts","useSelector","dispatch","useDispatch","_jsx","children","map","_ref","id","number","_jsxs","type","onClick","deleteContact","Label","Input","Filter","onChange","e","changeFilter","target","value","StyledForm","Form","StyledField","Field","_templateObject3","Button","_templateObject4","ErrorMsg","ErrorMessage","_templateObject5","ContactSchema","Yup","shape","min","max","required","ContactForm","newContact","some","element","checkedContact","addContact","Notiflix","concat","Formik","initialValues","validationSchema","onSubmit","values","actions","resetForm","component","Contacts","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}